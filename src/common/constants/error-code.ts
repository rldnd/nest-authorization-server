import { HttpStatus } from '@nestjs/common';
import { ErrorCodeVO } from '../vo/error-code.vo';

export const COMMON_ERROR_CODE = {
  CONTINUE: new ErrorCodeVO(HttpStatus.CONTINUE, 'CONTINUE'),
  SWITCHING_PROTOCOLS: new ErrorCodeVO(HttpStatus.SWITCHING_PROTOCOLS, 'SWITCHING_PROTOCOLS'),
  PROCESSING: new ErrorCodeVO(HttpStatus.PROCESSING, 'PROCESSING'),
  EARLYHINTS: new ErrorCodeVO(HttpStatus.EARLYHINTS, 'EARLYHINTS'),

  OK: new ErrorCodeVO(HttpStatus.OK, 'OK'),
  CREATED: new ErrorCodeVO(HttpStatus.CREATED, 'CREATED'),
  ACCEPTED: new ErrorCodeVO(HttpStatus.ACCEPTED, 'ACCEPTED'),
  NON_AUTHORITATIVE_INFORMATION: new ErrorCodeVO(
    HttpStatus.NON_AUTHORITATIVE_INFORMATION,
    'NON_AUTHORITATIVE_INFORMATION'
  ),
  NO_CONTENT: new ErrorCodeVO(HttpStatus.NO_CONTENT, 'NO_CONTENT'),
  RESET_CONTENT: new ErrorCodeVO(HttpStatus.RESET_CONTENT, 'RESET_CONTENT'),
  PARTIAL_CONTENT: new ErrorCodeVO(HttpStatus.PARTIAL_CONTENT, 'PARTIAL_CONTENT'),

  AMBIGUOUS: new ErrorCodeVO(HttpStatus.AMBIGUOUS, 'AMBIGUOUS'),
  MOVED_PERMANENTLY: new ErrorCodeVO(HttpStatus.MOVED_PERMANENTLY, 'MOVED_PERMANENTLY'),
  FOUND: new ErrorCodeVO(HttpStatus.FOUND, 'FOUND'),
  SEE_OTHER: new ErrorCodeVO(HttpStatus.SEE_OTHER, 'SEE_OTHER'),
  NOT_MODIFIED: new ErrorCodeVO(HttpStatus.NOT_MODIFIED, 'NOT_MODIFIED'),
  TEMPORARY_REDIRECT: new ErrorCodeVO(HttpStatus.TEMPORARY_REDIRECT, 'TEMPORARY_REDIRECT'),
  PERMANENT_REDIRECT: new ErrorCodeVO(HttpStatus.PERMANENT_REDIRECT, 'PERMANENT_REDIRECT'),

  BAD_REQUEST: new ErrorCodeVO(HttpStatus.BAD_REQUEST, 'BAD_REQUEST'),
  UNAUTHORIZED: new ErrorCodeVO(HttpStatus.UNAUTHORIZED, 'UNAUTHORIZED'),
  PAYMENT_REQUIRED: new ErrorCodeVO(HttpStatus.PAYMENT_REQUIRED, 'PAYMENT_REQUIRED'),
  FORBIDDEN: new ErrorCodeVO(HttpStatus.FORBIDDEN, 'FORBIDDEN'),
  NOT_FOUND: new ErrorCodeVO(HttpStatus.NOT_FOUND, 'NOT_FOUND'),
  METHOD_NOT_ALLOWED: new ErrorCodeVO(HttpStatus.METHOD_NOT_ALLOWED, 'METHOD_NOT_ALLOWED'),
  NOT_ACCEPTABLE: new ErrorCodeVO(HttpStatus.NOT_ACCEPTABLE, 'NOT_ACCEPTABLE'),
  PROXY_AUTHENTICATION_REQUIRED: new ErrorCodeVO(
    HttpStatus.PROXY_AUTHENTICATION_REQUIRED,
    'PROXY_AUTHENTICATION_REQUIRED'
  ),
  REQUEST_TIMEOUT: new ErrorCodeVO(HttpStatus.REQUEST_TIMEOUT, 'REQUEST_TIMEOUT'),
  CONFLICT: new ErrorCodeVO(HttpStatus.CONFLICT, 'CONFLICT'),
  GONE: new ErrorCodeVO(HttpStatus.GONE, 'GONE'),
  LENGTH_REQUIRED: new ErrorCodeVO(HttpStatus.LENGTH_REQUIRED, 'LENGTH_REQUIRED'),
  PRECONDITION_FAILED: new ErrorCodeVO(HttpStatus.PRECONDITION_FAILED, 'PRECONDITION_FAILED'),
  PAYLOAD_TOO_LARGE: new ErrorCodeVO(HttpStatus.PAYLOAD_TOO_LARGE, 'PAYLOAD_TOO_LARGE'),
  URI_TOO_LONG: new ErrorCodeVO(HttpStatus.URI_TOO_LONG, 'URI_TOO_LONG'),
  UNSUPPORTED_MEDIA_TYPE: new ErrorCodeVO(HttpStatus.UNSUPPORTED_MEDIA_TYPE, 'UNSUPPORTED_MEDIA_TYPE'),
  REQUESTED_RANGE_NOT_SATISFIABLE: new ErrorCodeVO(
    HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE,
    'REQUESTED_RANGE_NOT_SATISFIABLE'
  ),
  EXPECTATION_FAILED: new ErrorCodeVO(HttpStatus.EXPECTATION_FAILED, 'EXPECTATION_FAILED'),
  I_AM_A_TEAPOT: new ErrorCodeVO(HttpStatus.I_AM_A_TEAPOT, 'I_AM_A_TEAPOT'),
  MISDIRECTED: new ErrorCodeVO(HttpStatus.MISDIRECTED, 'MISDIRECTED'),
  UNPROCESSABLE_ENTITY: new ErrorCodeVO(HttpStatus.UNPROCESSABLE_ENTITY, 'UNPROCESSABLE_ENTITY'),
  FAILED_DEPENDENCY: new ErrorCodeVO(HttpStatus.FAILED_DEPENDENCY, 'FAILED_DEPENDENCY'),
  PRECONDITION_REQUIRED: new ErrorCodeVO(HttpStatus.PRECONDITION_REQUIRED, 'PRECONDITION_REQUIRED'),
  TOO_MANY_REQUESTS: new ErrorCodeVO(HttpStatus.TOO_MANY_REQUESTS, 'TOO_MANY_REQUESTS'),

  INTERNAL_SERVER_ERROR: new ErrorCodeVO(HttpStatus.INTERNAL_SERVER_ERROR, 'INTERNAL_SERVER_ERROR'),
  NOT_IMPLEMENTED: new ErrorCodeVO(HttpStatus.NOT_IMPLEMENTED, 'NOT_IMPLEMENTED'),
  BAD_GATEWAY: new ErrorCodeVO(HttpStatus.BAD_GATEWAY, 'BAD_GATEWAY'),
  SERVICE_UNAVAILABLE: new ErrorCodeVO(HttpStatus.SERVICE_UNAVAILABLE, 'SERVICE_UNAVAILABLE'),
  GATEWAY_TIMEOUT: new ErrorCodeVO(HttpStatus.GATEWAY_TIMEOUT, 'GATEWAY_TIMEOUT'),
  HTTP_VERSION_NOT_SUPPORTED: new ErrorCodeVO(HttpStatus.HTTP_VERSION_NOT_SUPPORTED, 'HTTP_VERSION_NOT_SUPPORTED'),
} as const;
